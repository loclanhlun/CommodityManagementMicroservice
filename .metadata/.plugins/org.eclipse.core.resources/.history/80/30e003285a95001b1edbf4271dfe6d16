package com.commoditymanagement.userservice.service.impl;

import java.util.ArrayList;
import java.util.List;

import org.apache.commons.lang.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;

import com.commoditymanagement.core.data.Role;
import com.commoditymanagement.core.data.User;
import com.commoditymanagement.userservice.repository.RoleRepository;
import com.commoditymanagement.userservice.repository.UserRepository;
import com.commoditymanagement.userservice.request.UserRequest;
import com.commoditymanagement.userservice.response.UserResponse;
import com.commoditymanagement.userservice.service.UserService;

@Service
public class UserServiceImpl implements UserService {

    @Autowired
    private UserRepository userRepository;

    @Autowired
    private RoleRepository roleRepository;
    
    @Override
    public List<UserResponse> findAll(Pageable pageable) {
        List<UserResponse> listUser = new ArrayList<>();
        List<User> userEntity = userRepository.findAll(pageable).getContent();
        for(User item : userEntity){
            UserResponse dto = new UserResponse();
            dto.setId(item.getId());
            dto.setEmail(item.getEmail());
            dto.setAddress(item.getAddress());
            dto.setGender(item.getGender());
            dto.setRoleCode(item.getRole().getCode());
            dto.setFullName(item.getFullName());
            dto.setPhoneNumber(item.getPhoneNumber());
            dto.setStatus(item.getStatus());

            listUser.add(dto);
        }

        return listUser;
    }

    @Override
    public int totalItem() {
        return (int) userRepository.count();
    }

	@Override
	public void addUser(UserRequest userRequest) {
		
		User user = new User();
		user.setFullName(userRequest.getFullName());
		user.setEmail(userRequest.getEmail());
		user.setPassword(userRequest.getPassword());
		user.setGender(userRequest.getGender());
		user.setPhoneNumber(userRequest.getPhoneNumber());
		user.setRole(role);
		user.setAddress(userRequest.getAddress());
		userRepository.save(user);
	}
	
	private void getRoleCode(String code)throws Exception {
		if(StringUtils.isEmpty(code)) {
			throw new Exception("Code can not null");
		}
		
		List<Role> roleCode = roleRepository.findByCode(code);
		if(roleCode.size() > 1) {
			throw new Exception("Code is exist");
		}
	}
}
